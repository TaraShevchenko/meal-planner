// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Ingredients {
    id       String @id @default(uuid())
    name     String @unique
    calories Float
    protein  Float
    carbs    Float

    recipes RecipeToIngredients[]
    meals   MealToIngredients[]

    @@map("ingredients")
}

model Recipe {
    id   String @id @default(uuid())
    name String

    ingredients RecipeToIngredients[]
    meals       MealToRecipe[]

    @@map("recipes")
}

model Meal {
    id       String    @id @default(uuid())
    mealTime DateTime?
    type     MealType

    recipes     MealToRecipe[]
    ingredients MealToIngredients[]
    menu        Menu?               @relation(fields: [menuId], references: [id])
    menuId      String?

    @@map("meals")
}

model Menu {
    id   String   @id @default(uuid())
    date DateTime

    meals Meal[]

    @@map("menus")
}

model RecipeToIngredients {
    recipe       Recipe      @relation(fields: [recipeId], references: [id])
    recipeId     String
    ingredient   Ingredients @relation(fields: [ingredientId], references: [id])
    ingredientId String
    quantity     Float

    @@id([recipeId, ingredientId])
    @@map("recipe_ingredients")
}

model MealToRecipe {
    meal     Meal   @relation(fields: [mealId], references: [id])
    mealId   String
    recipe   Recipe @relation(fields: [recipeId], references: [id])
    recipeId String
    servings Float

    @@id([mealId, recipeId])
    @@map("meal_recipes")
}

model MealToIngredients {
    meal         Meal        @relation(fields: [mealId], references: [id])
    mealId       String
    ingredient   Ingredients @relation(fields: [ingredientId], references: [id])
    ingredientId String
    quantity     Float

    @@id([mealId, ingredientId])
    @@map("meal_ingredients")
}

enum MealType {
    breakfast
    lunch
    dinner
    snack
}
